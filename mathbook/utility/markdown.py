# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/utility.markdown.ipynb (unless otherwise specified).

__all__ = ['find_links_in_markdown_text', 'link_with_anchor', 'get_formatted_markdown_link', 'WEBSITE_URL',
           'replace_all_links_with_formatted_links', 'embed_markdown_file']

# Cell
from IPython.display import display, Markdown
from .string import replace_string_by_indices
import os.path
from pathlib import Path
import re
import urllib.parse

# Cell
def find_links_in_markdown_text(text):
    """Returns ranges in the markdown text string where links occur.
    """
    matches = re.finditer('\[.*\]\(.*\)', text)
    return [match.span() for match in matches]

# Cell
def link_with_anchor(link_name, location='website'):
    """Formats link so that the file extension comes before
    the pound sign of the anchor.
    """
    assert link_name and location in ['website', 'notebook']
    link_name = link_name[1:-1]
    link_parts = link_name.split('#')
    assert len(link_parts) <= 2
    anchor = '' if len(link_parts) == 1 else f'#{link_parts[1]}'
    extension = '.html' if location == 'website' else '.ipynb'
    return f'{link_parts[0]}{extension}{anchor}'

# Cell
WEBSITE_URL = 'https://hyunjongkimmath.github.io/mathbook/'
def get_formatted_markdown_link(unformatted_link, location='website'):
    """Formats markdown styled link string.
    """
    assert location in ['website', 'notebook']
    matches = re.finditer('\(.*\)', unformatted_link)
    start, end = next(matches).span()
    link_name = unformatted_link[start:end]
    relative_link = link_with_anchor(link_name, location=location)
    if location == 'website':
        link = f'({WEBSITE_URL}{relative_link})'
    else:
        link = f'({relative_link})'
    return replace_string_by_indices(unformatted_link, (start, end),
                                     replace_with = link)

# Cell
def replace_all_links_with_formatted_links(text, location='website'):
    """Returns a modification of ``text`` with all links formatted."""
    assert location in ['website', 'notebook']
    link_ranges = find_links_in_markdown_text(text)
    formatted_links = [get_formatted_markdown_link(text[start:end], location=location)
                          for start, end in link_ranges]
    return replace_string_by_indices(text, link_ranges, formatted_links)


# Cell
def embed_markdown_file(file_path, display_file_link=False, location='website'):
    """Embed markdown file content into ipynb.
    """
    with open(file_path, 'r') as markdown_file:
        text = markdown_file.read()
        text = replace_all_links_with_formatted_links(text, location=location)
        display(Markdown(text))
        markdown_file.close()